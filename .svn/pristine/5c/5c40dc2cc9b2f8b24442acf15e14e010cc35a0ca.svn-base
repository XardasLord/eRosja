using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Navigation;
using Microsoft.Phone.Controls;
using Microsoft.Phone.Shell;
using eRosja.Resources;


namespace eRosja
{
    public partial class MainPage : PhoneApplicationPage
    {
        UzytkownikService.UzytkownikServiceClient uzytkownikUsluga;



        public MainPage()
        {
            InitializeComponent();
            uzytkownikUsluga = new UzytkownikService.UzytkownikServiceClient();
            uzytkownikUsluga.ZalogujUzytkownikaCompleted += uzytkownikUsluga_ZalogujUzytkownikaCompleted;
            uzytkownikUsluga.PobierzIDCompleted += uzytkownikUsluga_PobierzIDCompleted;
        }



        private void btnZarejestruj_Click(object sender, RoutedEventArgs e)
        {
            NavigationService.Navigate(new Uri("/Rejestracja.xaml", UriKind.Relative));
        }



        private void btnZaloguj_Click(object sender, RoutedEventArgs e)
        {
            string login = tbLogin.Text;
            string haslo = Hash.ZakodujSHA1(tbHaslo.Text);

            uzytkownikUsluga.ZalogujUzytkownikaAsync(login, haslo);
        }



        protected override void OnNavigatedTo(NavigationEventArgs e)
        {
            if (NavigationContext.QueryString.ContainsKey("param"))
            {
                string info = NavigationContext.QueryString["param"];
                lblInformacja.Text = info + " pomyślnie!";
            }
        }



        void uzytkownikUsluga_ZalogujUzytkownikaCompleted(object sender, UzytkownikService.ZalogujUzytkownikaCompletedEventArgs e)
        {
            bool istnieje = e.Result;

            if (istnieje)
            {
                string login = tbLogin.Text;
                string haslo = Hash.ZakodujSHA1(tbHaslo.Text);

                // Pobranie ID użytkownika
                uzytkownikUsluga.PobierzIDAsync(login, haslo);

                MessageBox.Show("Zalogowano pomyślnie", "Logowanie", MessageBoxButton.OK);
                NavigationService.Navigate(new Uri("/StronaGlowna.xaml", UriKind.Relative));
            }
            else
            {
                MessageBox.Show("Błędne dane podczas logowania", "Logowanie", MessageBoxButton.OK);
            }
        }



        void uzytkownikUsluga_PobierzIDCompleted(object sender, UzytkownikService.PobierzIDCompletedEventArgs e)
        {
            long ID;

            if (e.Result != 0)
            {
                ID = e.Result;

                // Dodanie ID do lokalnych ustawień
                var localSettings = Windows.Storage.ApplicationData.Current.LocalSettings;
                localSettings.Values.Add("id_uzytkownika", ID);
            }
        }




        // Sprawdzenie połączenia internetowego
        private void PhoneApplicationPage_Loaded(object sender, RoutedEventArgs e)
        {
            bool polaczenie = ((App)Application.Current).SprawdzPolaczenieInternetowe();

            if (polaczenie == false)
            {
                MessageBox.Show("Do działania aplikacji wymagane jest połączenie z internetem", "Brak internetu", MessageBoxButton.OK);
                Application.Current.Terminate();
            }           
        }    
  


    }
}