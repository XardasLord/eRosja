//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace eRosja.ZmianyService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfstringstring", Namespace="http://schemas.datacontract.org/2004/07/System")]
    public partial class TupleOfstringstring : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string m_Item1Field;
        
        private string m_Item2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item1Field, value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item2Field, value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ZmianyService.IZmianyService")]
    public interface IZmianyService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IZmianyService/PobierzZmiane", ReplyAction="http://tempuri.org/IZmianyService/PobierzZmianeResponse")]
        System.IAsyncResult BeginPobierzZmiane(System.DateTime dataSprawdzana, System.AsyncCallback callback, object asyncState);
        
        eRosja.ZmianyService.TupleOfstringstring EndPobierzZmiane(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IZmianyServiceChannel : eRosja.ZmianyService.IZmianyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PobierzZmianeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PobierzZmianeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public eRosja.ZmianyService.TupleOfstringstring Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((eRosja.ZmianyService.TupleOfstringstring)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZmianyServiceClient : System.ServiceModel.ClientBase<eRosja.ZmianyService.IZmianyService>, eRosja.ZmianyService.IZmianyService {
        
        private BeginOperationDelegate onBeginPobierzZmianeDelegate;
        
        private EndOperationDelegate onEndPobierzZmianeDelegate;
        
        private System.Threading.SendOrPostCallback onPobierzZmianeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ZmianyServiceClient() {
        }
        
        public ZmianyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZmianyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZmianyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZmianyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<PobierzZmianeCompletedEventArgs> PobierzZmianeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRosja.ZmianyService.IZmianyService.BeginPobierzZmiane(System.DateTime dataSprawdzana, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPobierzZmiane(dataSprawdzana, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eRosja.ZmianyService.TupleOfstringstring eRosja.ZmianyService.IZmianyService.EndPobierzZmiane(System.IAsyncResult result) {
            return base.Channel.EndPobierzZmiane(result);
        }
        
        private System.IAsyncResult OnBeginPobierzZmiane(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime dataSprawdzana = ((System.DateTime)(inValues[0]));
            return ((eRosja.ZmianyService.IZmianyService)(this)).BeginPobierzZmiane(dataSprawdzana, callback, asyncState);
        }
        
        private object[] OnEndPobierzZmiane(System.IAsyncResult result) {
            eRosja.ZmianyService.TupleOfstringstring retVal = ((eRosja.ZmianyService.IZmianyService)(this)).EndPobierzZmiane(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPobierzZmianeCompleted(object state) {
            if ((this.PobierzZmianeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PobierzZmianeCompleted(this, new PobierzZmianeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PobierzZmianeAsync(System.DateTime dataSprawdzana) {
            this.PobierzZmianeAsync(dataSprawdzana, null);
        }
        
        public void PobierzZmianeAsync(System.DateTime dataSprawdzana, object userState) {
            if ((this.onBeginPobierzZmianeDelegate == null)) {
                this.onBeginPobierzZmianeDelegate = new BeginOperationDelegate(this.OnBeginPobierzZmiane);
            }
            if ((this.onEndPobierzZmianeDelegate == null)) {
                this.onEndPobierzZmianeDelegate = new EndOperationDelegate(this.OnEndPobierzZmiane);
            }
            if ((this.onPobierzZmianeCompletedDelegate == null)) {
                this.onPobierzZmianeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPobierzZmianeCompleted);
            }
            base.InvokeAsync(this.onBeginPobierzZmianeDelegate, new object[] {
                        dataSprawdzana}, this.onEndPobierzZmianeDelegate, this.onPobierzZmianeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override eRosja.ZmianyService.IZmianyService CreateChannel() {
            return new ZmianyServiceClientChannel(this);
        }
        
        private class ZmianyServiceClientChannel : ChannelBase<eRosja.ZmianyService.IZmianyService>, eRosja.ZmianyService.IZmianyService {
            
            public ZmianyServiceClientChannel(System.ServiceModel.ClientBase<eRosja.ZmianyService.IZmianyService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPobierzZmiane(System.DateTime dataSprawdzana, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dataSprawdzana;
                System.IAsyncResult _result = base.BeginInvoke("PobierzZmiane", _args, callback, asyncState);
                return _result;
            }
            
            public eRosja.ZmianyService.TupleOfstringstring EndPobierzZmiane(System.IAsyncResult result) {
                object[] _args = new object[0];
                eRosja.ZmianyService.TupleOfstringstring _result = ((eRosja.ZmianyService.TupleOfstringstring)(base.EndInvoke("PobierzZmiane", _args, result)));
                return _result;
            }
        }
    }
}
